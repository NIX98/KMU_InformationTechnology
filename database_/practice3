SELECT   ENAME, DEPTNO, DNAME
FROM    EMP, DEPT
WHERE   EMP.DEPTNO = DEPT.DEPTNO; -- 에러 컬럼이름이 중복이라 , 컬럼이름 아펭 테이블이름을 붙어야함

SELECT   EMP.ENAME, EMP.DEPTNO, DEPT.DNAME
FROM    EMP, DEPT
WHERE   EMP.DEPTNO = DEPT.DEPTNO;


SELECT	EMP.ENAME, EMP.DEPTNO, DEPT.DNAME
FROM	EMP, DEPT
WHERE	EMP.DEPTNO = DEPT.DEPTNO; --ALIAS 미사용

SELECT	E.ENAME, E.DEPTNO, D.DNAME
FROM	EMP E, DEPT D
WHERE	E.DEPTNO = D.DEPTNO; --ALIAS 사용

SELECT	ENAME, E.DEPTNO, DNAME
FROM	EMP E, DEPT D
WHERE	E.DEPTNO = D.DEPTNO; --접두어 일부 생략(중복하지 않는 컬럼일경우 테이블명 당연히 생략 가능

SELECT	EMP.ENAME, EMP.DEPTNO, DEPT.DNAME
FROM	EMP E, DEPT D
WHERE	E.DEPTNO = D.DEPTNO; --에러 from에서 E,D로 정의했는데 select 에서 EMP DEPT 로 사용

SELECT  E.ENAME 사원명, E.SAL 급여, S.GRADE 급여등급
FROM   EMP E, SALGRADE S
WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL;


SELECT	E.ENAME, E.DEPTNO, E. SAL, D.DNAME
FROM	EMP E, DEPT D
WHERE	E.DEPTNO = D.DEPTNO AND E.SAL > 2000;

SELECT	E.ENAME, E.DEPTNO, E. SAL, D.DNAME
FROM	EMP E INNER JOIN DEPT D
ON	    E.DEPTNO = D.DEPTNO
WHERE 	E.SAL > 2000;

SELECT  EMPNO, ENAME, DEPTNO, DNAME
FROM    EMP NATURAL JOIN DEPT;

SELECT  EMPNO, ENAME, DEPT.DEPTNO, DNAME
FROM    EMP  JOIN DEPT
ON      EMP.DEPTNO = DEPT.DEPTNO;

SELECT	* 
FROM	EMP  NATURAL JOIN  DEPT;

SELECT	* 
FROM  	EMP INNER JOIN DEPT
ON	EMP.DEPTNO = DEPT.DEPTNO;



SELECT	E.ENAME, D.DEPTNO, D.DNAME
FROM	EMP E FULL OUTER JOIN DEPT D
ON	E.DEPTNO = D.DEPTNO;

SELECT	E.ENAME, D.DEPTNO, D.DNAME
FROM	EMP E LEFT OUTER JOIN DEPT D
ON	E.DEPTNO = D.DEPTNO
UNION
SELECT	E.ENAME, D.DEPTNO, D.DNAME
FROM	EMP E RIGHT OUTER JOIN DEPT D
ON	E.DEPTNO = D.DEPTNO;


SELECT   S.S_NAME, D.D_NAME
FROM    STUDENT S INNER JOIN DEPT D   ON  (S.DEPT = D.D_ID);--3

SELECT   S.S_NAME, D.D_NAME
FROM    STUDENT S CROSS JOIN DEPT D;--12

SELECT   S.S_NAME, D.D_NAME
FROM    STUDENT S LEFT OUTER JOIN DEPT D   ON  (S.DEPT = D.D_ID);--4

SELECT   S.S_NAME, D.D_NAME
FROM    STUDENT S RIGHT OUTER JOIN DEPT D   ON  (S.DEPT = D.D_ID);--4

SELECT   S.S_NAME, D.D_NAME
FROM    STUDENT S FULL OUTER JOIN DEPT D   ON  (S.DEPT = D.D_ID);--5

SELECT E.EMPNO AS EMPNO, E.ENAME AS ENAME, E.MGR AS MGRNO, M.ENAME AS MNAME
FROM   EMP E LEFT JOIN EMP M
ON     E.MGR = M.EMPNO;


SELECT		LEVEL, EMPNO 사원, MGR 관리자, CONNECT_BY_ISLEAF ISLEAF
FROM		EMP 
START WITH	MGR IS NULL
CONNECT BY PRIOR 	EMPNO = MGR;

SELECT  		CONNECT_BY_ROOT EMPNO 시작사원, 					SYS_CONNECT_BY_PATH(EMPNO,'/') 경로, EMPNO 사원, MGR 관리자
FROM    		EMP 
START WITH     	EMPNO in (7566, 7698, 7782) 
CONNECT BY PRIOR 	EMPNO = MGR;



SELECT 	PLAYER_NAME, BACK_NO, TEAM_ID
FROM   	PLAYER
WHERE  	TEAM_ID = 'K04'
UNION ALL
SELECT 	PLAYER_NAME, BACK_NO, TEAM_ID
FROM   	PLAYER
WHERE  	TEAM_ID = 'K06' 
ORDER BY 	PLAYER_NAME;

SELECT 	 'T' 구분코드, PLAYER_NAME, TEAM_ID
FROM   	 PLAYER
WHERE  	 TEAM_ID = 'K06'
UNION ALL
SELECT 	 'P' 구분코드, PLAYER_NAME, POSITION
FROM   	 PLAYER
WHERE  	 POSITION = 'GK'
ORDER BY 	 구분코드, TEAM_ID;

SELECT 	TEAM_ID 팀코드, PLAYER_NAME 선수명, POSITION 포지션
FROM   	PLAYER
WHERE  	TEAM_ID  = 'K06'
INTERSECT  
SELECT 	TEAM_ID 팀코드, PLAYER_NAME 선수명, POSITION 포지션
FROM   	PLAYER
WHERE  	POSITION = 'GK';
--위 아래 결과값은 같다
SELECT 	TEAM_ID 팀코드, PLAYER_NAME 선수명, POSITION 포지션
FROM   	PLAYER
WHERE  	TEAM_ID  = 'K06' AND POSITION = 'GK';

